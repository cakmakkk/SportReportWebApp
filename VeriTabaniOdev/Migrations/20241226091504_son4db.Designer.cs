// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VeriTabaniOdev.Models;

#nullable disable

namespace VeriTabaniOdev.Migrations
{
    [DbContext(typeof(FileDibiDbSonContext))]
    [Migration("20241226091504_son4db")]
    partial class son4db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VeriTabaniOdev.Models.Fixture", b =>
                {
                    b.Property<int>("Matchid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("matchid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Matchid"));

                    b.Property<int?>("Awayscore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("awayscore");

                    b.Property<int?>("Awayteamid")
                        .HasColumnType("integer")
                        .HasColumnName("awayteamid");

                    b.Property<int?>("Homescore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("homescore");

                    b.Property<int?>("Hometeamid")
                        .HasColumnType("integer")
                        .HasColumnName("hometeamid");

                    b.Property<int?>("Leagueid")
                        .HasColumnType("integer")
                        .HasColumnName("leagueid");

                    b.Property<DateOnly>("Matchdate")
                        .HasColumnType("date")
                        .HasColumnName("matchdate");

                    b.Property<string>("Matchresult")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("matchresult")
                        .HasComputedColumnSql("\nCASE\n    WHEN (homescore > awayscore) THEN 'HomeWin'::text\n    WHEN (homescore < awayscore) THEN 'AwayWin'::text\n    WHEN (homescore = awayscore) THEN 'Draw'::text\n    ELSE 'Pending'::text\nEND", true);

                    b.HasKey("Matchid")
                        .HasName("fixtures_pkey");

                    b.HasIndex("Awayteamid");

                    b.HasIndex("Hometeamid");

                    b.HasIndex("Leagueid");

                    b.ToTable("fixtures", (string)null);
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.League", b =>
                {
                    b.Property<int>("Leagueid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("leagueid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Leagueid"));

                    b.Property<string>("Leaguename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("leaguename");

                    b.Property<int?>("Sportid")
                        .HasColumnType("integer")
                        .HasColumnName("sportid");

                    b.HasKey("Leagueid")
                        .HasName("leagues_pkey");

                    b.HasIndex("Sportid");

                    b.ToTable("leagues", (string)null);
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Player", b =>
                {
                    b.Property<int>("Playerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("playerid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Playerid"));

                    b.Property<int?>("Goals")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("goals");

                    b.Property<string>("Playername")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("playername");

                    b.Property<int?>("Positionid")
                        .HasColumnType("integer")
                        .HasColumnName("positionid");

                    b.Property<int?>("Teamid")
                        .HasColumnType("integer")
                        .HasColumnName("teamid");

                    b.HasKey("Playerid")
                        .HasName("players_pkey");

                    b.HasIndex("Positionid");

                    b.HasIndex("Teamid");

                    b.ToTable("players", (string)null);
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Pointstable", b =>
                {
                    b.Property<int?>("Goaldifference")
                        .HasColumnType("integer")
                        .HasColumnName("goaldifference");

                    b.Property<int?>("Goalsconceded")
                        .HasColumnType("integer")
                        .HasColumnName("goalsconceded");

                    b.Property<int?>("Goalsscored")
                        .HasColumnType("integer")
                        .HasColumnName("goalsscored");

                    b.Property<int?>("Leagueid")
                        .HasColumnType("integer")
                        .HasColumnName("leagueid");

                    b.Property<string>("Leaguename")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("leaguename");

                    b.Property<int?>("Matchesdrawn")
                        .HasColumnType("integer")
                        .HasColumnName("matchesdrawn");

                    b.Property<int?>("Matcheslost")
                        .HasColumnType("integer")
                        .HasColumnName("matcheslost");

                    b.Property<int?>("Matchesplayed")
                        .HasColumnType("integer")
                        .HasColumnName("matchesplayed");

                    b.Property<int?>("Matcheswon")
                        .HasColumnType("integer")
                        .HasColumnName("matcheswon");

                    b.Property<int?>("Points")
                        .HasColumnType("integer")
                        .HasColumnName("points");

                    b.Property<string>("Teamname")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("teamname");

                    b.ToTable((string)null);

                    b.ToView("pointstable", (string)null);
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Position", b =>
                {
                    b.Property<int>("Positionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("positionid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Positionid"));

                    b.Property<string>("Positionname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("positionname");

                    b.Property<int?>("Sportid")
                        .HasColumnType("integer")
                        .HasColumnName("sportid");

                    b.HasKey("Positionid")
                        .HasName("positions_pkey");

                    b.HasIndex("Sportid");

                    b.ToTable("positions", (string)null);
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Scoringsystem", b =>
                {
                    b.Property<int>("Sportid")
                        .HasColumnType("integer")
                        .HasColumnName("sportid");

                    b.Property<int?>("Pointsdraw")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("pointsdraw");

                    b.Property<int?>("Pointsloss")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("pointsloss");

                    b.Property<int?>("Pointswin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(3)
                        .HasColumnName("pointswin");

                    b.HasKey("Sportid")
                        .HasName("scoringsystem_pkey");

                    b.ToTable("scoringsystem", (string)null);
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Sport", b =>
                {
                    b.Property<int>("Sportid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sportid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Sportid"));

                    b.Property<string>("Sportname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sportname");

                    b.HasKey("Sportid")
                        .HasName("sports_pkey");

                    b.ToTable("sports", (string)null);
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Team", b =>
                {
                    b.Property<int>("Teamid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("teamid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Teamid"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("city");

                    b.Property<string>("Clubpresident")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("clubpresident");

                    b.Property<string>("Coachname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("coachname");

                    b.Property<int?>("Draws")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("draws");

                    b.Property<int?>("Goaldifference")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("integer")
                        .HasColumnName("goaldifference")
                        .HasComputedColumnSql("(goalsscored - goalsconceded)", true);

                    b.Property<int?>("Goalsconceded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("goalsconceded");

                    b.Property<int?>("Goalsscored")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("goalsscored");

                    b.Property<int?>("Leagueid")
                        .HasColumnType("integer")
                        .HasColumnName("leagueid");

                    b.Property<int?>("Leagueposition")
                        .HasColumnType("integer")
                        .HasColumnName("leagueposition");

                    b.Property<int?>("Losses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("losses");

                    b.Property<int?>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("points");

                    b.Property<string>("Teamname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("teamname");

                    b.Property<int?>("Wins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("wins");

                    b.HasKey("Teamid")
                        .HasName("teams_pkey");

                    b.HasIndex("Leagueid");

                    b.ToTable("teams", (string)null);
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Userid"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("Userid")
                        .HasName("users_pkey");

                    b.HasIndex(new[] { "Username" }, "users_username_key")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Fixture", b =>
                {
                    b.HasOne("VeriTabaniOdev.Models.Team", "Awayteam")
                        .WithMany("FixtureAwayteams")
                        .HasForeignKey("Awayteamid")
                        .HasConstraintName("fixtures_awayteamid_fkey");

                    b.HasOne("VeriTabaniOdev.Models.Team", "Hometeam")
                        .WithMany("FixtureHometeams")
                        .HasForeignKey("Hometeamid")
                        .HasConstraintName("fixtures_hometeamid_fkey");

                    b.HasOne("VeriTabaniOdev.Models.League", "League")
                        .WithMany("Fixtures")
                        .HasForeignKey("Leagueid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fixtures_leagueid_fkey");

                    b.Navigation("Awayteam");

                    b.Navigation("Hometeam");

                    b.Navigation("League");
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.League", b =>
                {
                    b.HasOne("VeriTabaniOdev.Models.Sport", "Sport")
                        .WithMany("Leagues")
                        .HasForeignKey("Sportid")
                        .HasConstraintName("leagues_sportid_fkey");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Player", b =>
                {
                    b.HasOne("VeriTabaniOdev.Models.Position", "Position")
                        .WithMany("Players")
                        .HasForeignKey("Positionid")
                        .HasConstraintName("players_positionid_fkey");

                    b.HasOne("VeriTabaniOdev.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("Teamid")
                        .HasConstraintName("players_teamid_fkey");

                    b.Navigation("Position");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Position", b =>
                {
                    b.HasOne("VeriTabaniOdev.Models.Sport", "Sport")
                        .WithMany("Positions")
                        .HasForeignKey("Sportid")
                        .HasConstraintName("positions_sportid_fkey");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Team", b =>
                {
                    b.HasOne("VeriTabaniOdev.Models.League", "League")
                        .WithMany("Teams")
                        .HasForeignKey("Leagueid")
                        .HasConstraintName("teams_leagueid_fkey");

                    b.Navigation("League");
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.League", b =>
                {
                    b.Navigation("Fixtures");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Position", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Sport", b =>
                {
                    b.Navigation("Leagues");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("VeriTabaniOdev.Models.Team", b =>
                {
                    b.Navigation("FixtureAwayteams");

                    b.Navigation("FixtureHometeams");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
